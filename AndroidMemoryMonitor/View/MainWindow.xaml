<!--
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->
<Window x:Class="AndroidMemoryMonitor.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:oxy="clr-namespace:OxyPlot.Wpf;assembly=OxyPlot.Wpf"
        mc:Ignorable="d"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:mvvm="clr-namespace:GalaSoft;assembly=GalaSoft.MvvmLight"
        xmlns:command="http://www.galasoft.ch/mvvmlight"
        xmlns:validator="clr-namespace:AndroidMemoryMonitor.Validator"
        xmlns:view="clr-namespace:AndroidMemoryMonitor.View"
        xmlns:viewModel="clr-namespace:AndroidMemoryMonitor.ViewModel"
        d:DataContext="{d:DesignInstance viewModel:MainViewModel, IsDesignTimeCreatable=False}"
        Title="{Binding Path=Title, Mode=OneWay}" Height="800" Width="1200" 
        >
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closed">
            <command:EventToCommand Command="{Binding CloseCommand, Mode=OneWay}"
              
               MustToggleIsEnabledValue="True" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        
        <Grid Grid.Row="0" Grid.Column="0" >
            <StackPanel Orientation="Horizontal">
                <Label>Devices:</Label>
                <ComboBox ItemsSource="{Binding Path=Devices}" DisplayMemberPath="Model"
                          SelectedItem="{Binding Path=SelectedDevice, Mode=TwoWay}"
                          Width="200" />
                <Button Content="Refresh" Command="{Binding Path=RefreshDevicesCommand}"></Button>
            </StackPanel>
        </Grid>

        <Grid Grid.Row="1" Grid.Column="0" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="75"></ColumnDefinition>
                <ColumnDefinition Width="50"></ColumnDefinition>
                <ColumnDefinition Width="50"></ColumnDefinition>
                <ColumnDefinition Width="50"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <Label Grid.Column="0">Packagename:</Label>
            <ComboBox Grid.Column="1" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Center" ItemsSource="{Binding Packages}" 
                      DisplayMemberPath="Name" SelectedItem="{Binding SelectedPackage, Mode=TwoWay}"
                      IsEnabled="{Binding Path=DeviceSelected}" />

            <Button Grid.Column="2" Content="Refresh" Command="{Binding Path=RefreshPackagesCommand}"
                    IsEnabled="{Binding Path=DeviceSelected}" />

            <Label Grid.Column="3">Refresh Interval:</Label>
            <TextBox Grid.Column="4" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Center" TextAlignment="Right" 
                     >
                <TextBox.Text>
                    <Binding Path="Interval" Converter="{StaticResource IntConverter}">
                        <Binding.ValidationRules>
                            <validator:MaxIntValidator MaxValue="10000"/>
                            <validator:MinIntValidator MinValue="1000"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <Button Grid.Column="5" Command="{Binding Path=StartCommand}" IsEnabled="{Binding PackageSelected}">Start</Button>
            <Button Grid.Column="6" Command="{Binding Path=StopCommand}" IsEnabled="{Binding PackageSelected}">Stop</Button>
            <Button Grid.Column="7" Command="{Binding Path=ClearCommand}" IsEnabled="{Binding PackageSelected}">Clear</Button>
        </Grid>

        
        <view:PlotView Grid.Row="2" DataContext="{Binding Path=PlotViewModel}"></view:PlotView>
    </Grid>
</Window>
